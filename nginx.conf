server {
  listen 80;

  # 定义根目录变量
  set $root /app;

  root $root;

  # 访问日志和错误日志的路径（根据需要取消注释）
  access_log /app/logs/access.log;
  error_log /app/logs/error.log;

  # 匹配前端路由url，将请求转发至SSR服务器
  location / {
    # 因为是docker部署的整套服务，这里的host不是传统的127.0.0.1或者localhost，而是docker容器的名字 ssr
    proxy_pass http://ssr:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    add_header Cache-Control "no-cache, must-revalidate"; # 设置协商缓存
  }

  # 用alias（别名）方式提供/.next/static/目录下的静态文件
  location /_next/static/ {
    alias $root/ssr/standalone/.next/static/; # 映射到 Next.js 静态文件目录
    expires 1y; # 设置缓存过期时间为 1 年
    add_header Cache-Control "public, max-age=31536000, immutable"; # 设置强缓存

  }

  # 用alias（别名）方式提供/public/目录下的静态文件
  location /public/ {
    alias $root/ssr/standalone/public/;
    expires 1y; # 设置缓存过期时间为 1 年
    add_header Cache-Control "public, max-age=31536000, immutable"; # 设置强缓存
  }

  # 匹配后端API url，将请求转发至后端服务器
  location /api/ {
    # 因为是docker部署的整套服务，这里的host不是传统的127.0.0.1或者localhost，而是docker容器的名字 nestjs-app
    proxy_pass http://nestjs-app:3008;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # 其他静态文件（如 favicon.ico）
  location = /favicon.ico {
    alias $root/ssr/standalone/public/favicon.ico;
  }
}
